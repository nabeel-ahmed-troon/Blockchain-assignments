{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_app\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\n// function Card(props)\n// {\n//     return(\n//     <>\n//     <div className=\"cards\">\n//         <div className=\"card\">\n//             <img className=\"card_image\" src={props.imgSrc} alt=\"MyPic\"/>\n//             <div className=\"card_info\">\n//                 <span className=\"card_category\"></span>\n//                 <h3 className=\"class_title\"></h3>\n//                 <a href={props.link}>\n//                     <button>Watch Now</button>\n//                 </a>\n//             </div>\n//         </div>\n//     </div>\n//     </>\n//     );\n// }\n// export default Card;\n//=======================================\n// import React from \"react\";\n// const {ethers}=require('ethers');\n// let contract;\n// const App=()=>{\n//     const ethereum =window.ethereum;\n//     let abi=[\n//         {\n//             \"inputs\": [],\n//             \"name\": \"balance\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [],\n//             \"name\": \"getBalance\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"_balance\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"setBalance\",\n//             \"outputs\": [],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         }\n//     ];\n//     let conAddress=\"0xd6dfe26Ef82b4343AFE0343367CF3c5d50aFdadb\";\n//   //contract=new ethereum.eth.Contract(abi,conAddress);\n//     const login=async()=>{\n//         if(ethereum){\n//             ethereum.request({ method: 'eth_requestAccounts' });\n//            // console.log(ethereum.request({ method: 'eth_getBalance' }));\n//            // console.log()\n//             }\n//         else{\n//             console.log(\"Install Metamask\");\n//         }\n//         contract = new ethers.Contract(conAddress,abi);\n//         const setData= await contract.setBalance(10);\n//         const getData= await contract.getBalance();\n//         console.log(getData.toString());\n//     }\n//     return(\n//         <>\n//         <h1 className=\"mainHeading\">Ethereum Dapp</h1>\n//         <span>Login to Metamask to connect to Rinkeby<br></br></span>\n//         <button className=\"loginBtn\" onClick={login}>Login</button><br></br>\n//         <input type=\"text\"></input>\n//         <button className=\"transferBtn\">Transfer</button>\n//         <button className=\"transferBtn\">GetBalance</button>\n//         </>\n//     );\n// }\n// export default App;\n//==========================================================\n//==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>\n// import React,{useState} from 'react'\n// import {ethers} from 'ethers'\n// const App=()=>{\n//     const [balance,balanceUpdate]=useState(null);\n//     const [LoginButtonTxt,setLoginButtonText]=useState('MetaMask Login');\n//     const [defaultAddress,setDefaultAddress]=useState(null);\n//     const AppHandler=()=>{\n//         if(window.ethereum&&window.ethereum.isMetaMask){\n//             console.log(\"Metamask running\");\n//             window.ethereum.request({method: 'eth_requestAccounts'})\n//             .then(result=>{\n//                     addressSet(result[0]);\n//                     setLoginButtonText('MetaMask Connected');\n//             })\n//         }\n//     }\n//     const addressSet=(newAccount)=>\n//     {\n//         setDefaultAddress(newAccount);\n//     }\n//     const getBalance=(newAddress)=>{\n//         window.ethereum.request({method: 'eth_getBalance', params: [newAddress,'latest']})\n//         .then(balance=>{\n//                 balanceUpdate(ethers.utils.formatEther(balance));\n//                 console.log(\"running\");\n//         })\n//         console.log(\"getbalance button running\");\n//     }\n//     return(\n//         <>\n//         <h1>Ethereum Dapp <button onClick={AppHandler}>{LoginButtonTxt}</button></h1>\n//         <br>\n//         </br>\n//         <input type=\"text\" value=\"Enter to No of Token to transfer\"/>\n//         <br></br>\n//         <input type='text' value=\"Address of Receiver\"/><button>Transfer Token</button>\n//         <br></br>\n//         <h2>balance= {balance}</h2>\n//         <button onClick={getBalance(defaultAddress)}>GetBalance</button>\n//         </>\n//     );\n// }\n// export default App;\n//==>===========================================<=============\n//==>DIGITAL CLOCK CODE BELOW\n// import React, { useState } from 'react'\n// const App=()=>\n// {\n//     let time= new Date().toLocaleTimeString();\n//     const [currentTime,SetTime]=useState(time);\n//     const [cColor,SetColor]=useState('purple');\n//     const changeBg=()=>{\n//         let color='green';\n//         SetColor(color);\n//     }\n//     const backToNormal=()=>{\n//         let color='purple';\n//         SetColor(color);\n//     }\n//     const UpdateTime=()=>\n//     {\n//         time= new Date().toLocaleTimeString();\n//         SetTime  (time);\n//     };\n//     setInterval(UpdateTime,100);\n//     return(\n//         <>\n//         <div style={{backgroundColor:cColor}}>\n//             <h1 onMouseEnter={changeBg} onMouseLeave={backToNormal}>{currentTime}</h1>\n//             </div>\n//         </>\n//     );\n// }\n// export default App;\n//=====================\n// import React, { useState } from \"react\";\n// import {ethers} from 'ethers'\n// import Web3 from 'web3';\n//  const App=()=>{\n//     let conAddress=\"0x7e182c1433eABB36b7cF855cDF49ADa30EaEF7E0\";\n//     let abi=[\n//         {\n//             \"inputs\": [],\n//             \"name\": \"get\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"_value\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"set\",\n//             \"outputs\": [],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [],\n//             \"name\": \"value\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         }\n//     ];\n// const provider = new ethers.providers.Web3Provider(web3.currentProvider);\n// let provider = new ethers.providers.JsonRpcProvider()\n// let provider =ethers.getDefaultProvider();\n// const contract= new ethers.Contract(conAddress,abi,provider);\n//     const web3 = new Web3(window.ethereum);\n//     const ethObj = new web3.eth.Contract(abi, conAddress);\n//     console.log(ethObj.methods,\"my Methods\");\n//     const [getNumber,setGetNumber]=useState('');\n//     const [number,setNumber]=useState(0);\n//     let connectMetamask=()=>{\n//         if(window.ethereum)\n//         {\n//             window.ethereum.request({method: 'eth_requestAccounts'});\n//             console.log(\"Metamask Connected\");\n//         }\n//     }\n//     const getBalance=async(e)=>{\n//         e.preventDefault();\n//         const result= await ethObj.methods.get().call();\n//         console.log(\"Test con obj : \",result);\n//         setGetNumber(result);\n//         console.log(result);\n//         console.log(\"contract\",ethObj);\n//     }\n//     const setBalance=async(e)=>{\n//         e.preventDefault();\n//         const accounts=await window.ethereum.enable();\n//         const account=accounts[0];\n//         const gas= await ethObj.methods.set(number).estimateGas();\n//         const result= await ethObj.methods.set(number).send({from: account,gas})\n//         //setNumber(result);\n//         console.log(result);\n//     }\n//     return(\n//         <>\n//         <h1>Smart Contract Integration</h1>\n//         <button onClick={connectMetamask}>Connect Metamask</button>\n//         <form onSubmit={setBalance}>\n//             <label>\n//                 Set Number : <input type=\"text\" value={number} onChange={e=>setNumber(e.target.value)}></input>\n//             </label>\n//             <input type=\"submit\" value=\"Set Number\"></input>\n//             </form>\n//         <button onClick={getBalance} type=\"button\">Get Number</button>{getNumber}\n//         </>\n//     );\n//  }\n//  export default App;\n//==============erc20 smart contrat with front end;\n//  import React,{ useState} from 'react'\n//  import Web3 from 'web3'\n//  const App=()=>{\n//     const [userAccount,setUserAccount]=useState(\"\");\n//     const [amount,setAmount]=useState(0);\n//     const [metamaskStatus,setMetamaskStatus]=useState(\"Connect Metamask\");\n//     //below to check  total token\n//     const [balance,setBalance]=useState(0);\n//     const conAddress=\"0x83cC5ae4996909726f090E64DE5105013aF55050\";\n//     const abi=[\n//         {\n//             \"inputs\": [],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"constructor\"\n//         },\n//         {\n//             \"anonymous\": false,\n//             \"inputs\": [\n//                 {\n//                     \"indexed\": true,\n//                     \"internalType\": \"address\",\n//                     \"name\": \"owner\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"indexed\": true,\n//                     \"internalType\": \"address\",\n//                     \"name\": \"spender\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"indexed\": false,\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"value\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"Approval\",\n//             \"type\": \"event\"\n//         },\n//         {\n//             \"anonymous\": false,\n//             \"inputs\": [\n//                 {\n//                     \"indexed\": true,\n//                     \"internalType\": \"address\",\n//                     \"name\": \"previousOwner\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"indexed\": true,\n//                     \"internalType\": \"address\",\n//                     \"name\": \"newOwner\",\n//                     \"type\": \"address\"\n//                 }\n//             ],\n//             \"name\": \"OwnershipTransferred\",\n//             \"type\": \"event\"\n//         },\n//         {\n//             \"anonymous\": false,\n//             \"inputs\": [\n//                 {\n//                     \"indexed\": true,\n//                     \"internalType\": \"address\",\n//                     \"name\": \"from\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"indexed\": true,\n//                     \"internalType\": \"address\",\n//                     \"name\": \"to\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"indexed\": false,\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"value\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"Transfer\",\n//             \"type\": \"event\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"owner\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"spender\",\n//                     \"type\": \"address\"\n//                 }\n//             ],\n//             \"name\": \"allowance\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"spender\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"amount\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"approve\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"bool\",\n//                     \"name\": \"\",\n//                     \"type\": \"bool\"\n//                 }\n//             ],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"account\",\n//                     \"type\": \"address\"\n//                 }\n//             ],\n//             \"name\": \"balanceOf\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [],\n//             \"name\": \"decimals\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint8\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint8\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"spender\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"subtractedValue\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"decreaseAllowance\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"bool\",\n//                     \"name\": \"\",\n//                     \"type\": \"bool\"\n//                 }\n//             ],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"spender\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"addedValue\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"increaseAllowance\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"bool\",\n//                     \"name\": \"\",\n//                     \"type\": \"bool\"\n//                 }\n//             ],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"to\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"amount\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"mint\",\n//             \"outputs\": [],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [],\n//             \"name\": \"name\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"string\",\n//                     \"name\": \"\",\n//                     \"type\": \"string\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [],\n//             \"name\": \"owner\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"\",\n//                     \"type\": \"address\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [],\n//             \"name\": \"renounceOwnership\",\n//             \"outputs\": [],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [],\n//             \"name\": \"symbol\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"string\",\n//                     \"name\": \"\",\n//                     \"type\": \"string\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [],\n//             \"name\": \"totalSupply\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"recipient\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"amount\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"transfer\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"bool\",\n//                     \"name\": \"\",\n//                     \"type\": \"bool\"\n//                 }\n//             ],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"sender\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"recipient\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"amount\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"transferFrom\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"bool\",\n//                     \"name\": \"\",\n//                     \"type\": \"bool\"\n//                 }\n//             ],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"newOwner\",\n//                     \"type\": \"address\"\n//                 }\n//             ],\n//             \"name\": \"transferOwnership\",\n//             \"outputs\": [],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         }\n//     ];\n//     const web3= new Web3(window.ethereum);\n//     const contract = new web3.eth.Contract(abi,conAddress);\n//     console.log(contract.methods);\n//     let connectMetamask=()=>{\n//                 if(window.ethereum)\n//                 {\n//                     window.ethereum.request({method: 'eth_requestAccounts'});\n//                     console.log(\"Metamask Connected\");\n//                     setMetamaskStatus(\"Connected\");\n//                 }\n//             }\n//     const sendToken=async()=>{\n//         // const accounts= await window.ethereum.enable();\n//         const accounts = await  window.ethereum.request({method: 'eth_accounts'});\n//         const account= accounts[0];\n//         console.log(\"acoount address\",account);\n//         const gas= await contract.methods.transfer(userAccount,amount).estimateGas();\n//         const result= await contract.methods.transfer(userAccount,amount).sendTransaction({from:account,gas,amount});\n//         console.log(result);\n//         //await contract.methods.transfer(userAccount,amount);\n//         //await transaction.wait();\n//         console.log(`${amount} has been succesfully transfer to account : ${userAccount}`);\n// }\n//     const balanceOf=async()=>{\n//         const result= await contract.methods.balanceOf(balance).call();\n//         setBalance(result);\n//     }\n//     return(\n//         <>\n//         <h1>My Token</h1>\n//         <br></br>\n//         <button onClick={connectMetamask}>{metamaskStatus}</button>\n//         <br></br>\n//         <input type=\"text\" onChange={e=>setUserAccount(e.target.value)} placeholder=\"Enter receiver address\"/>\n//         <input type=\"text\" onChange={e=>setAmount(e.target.value)} placeholder=\"Enter Amount of Token\"/>\n//         <button onClick={sendToken}>Transfer Token</button>\n//         <br></br>\n//         <input type=\"text\" onChange={e=>setBalance(e.target.value)} placeholder=\"Enter Address\"/>\n//         <button onClick={balanceOf}>Balance</button>{balance}\n//         </>\n//     );\n//  }\n//  export default App;\n//===============================================\n//lottery system app below\n// import React from \"react\";\n// import Web3 from 'web3'\n// const App=()=>{\n//     return(\n//         <h1>nabeel</h1>\n//     );\n// }\n// export default App;\nimport { parseEther } from 'ethers/lib/utils';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport React, { useState } from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // let selectedAccount;\n  const [selectedAccount, setSelectedAccount] = useState(\"\");\n  let provider = window.ethereum;\n\n  let connectMetamask = () => {\n    if (provider !== \"undefined\") {\n      provider.request({\n        method: 'eth_requestAccounts'\n      }).then(accounts => {\n        const account = accounts[0];\n        setSelectedAccount(account);\n        console.log(`slected Account is ${account}`);\n        console.log('selected accoutn is : ', account);\n      }).catch(err => {\n        console.log(err);\n        return;\n      });\n      provider.on('accountsChanged', function (accounts) {\n        setSelectedAccount(accounts[0]);\n        console.log(`selected account changed to ${accounts[0]}`);\n      });\n    }\n  };\n\n  const abi = [{\n    \"inputs\": [],\n    \"name\": \"buyTicket\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"claimFunds\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"claimReward\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"bytes32\",\n      \"name\": \"requestId\",\n      \"type\": \"bytes32\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"randomness\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"rawFulfillRandomness\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"selectWinner\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"_vrfCoordinator\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"_link\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"_keyhash\",\n      \"type\": \"bytes32\"\n    }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"previousOwner\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"newOwner\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"OwnershipTransferred\",\n    \"type\": \"event\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"renounceOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": false,\n      \"internalType\": \"bytes32\",\n      \"name\": \"requestId\",\n      \"type\": \"bytes32\"\n    }],\n    \"name\": \"RequestedRandomness\",\n    \"type\": \"event\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"startLottery\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"startNewLottery\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"stopLottery\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"newOwner\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"transferOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"balanceOfAccount\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"buyerTicketCount\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"currentLotteryWinner\",\n    \"outputs\": [{\n      \"internalType\": \"address payable\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"fee\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"lotteryId\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"randomness\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"remainingTickets\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"status\",\n    \"outputs\": [{\n      \"internalType\": \"enum Lottery.lotteryStatus\",\n      \"name\": \"\",\n      \"type\": \"uint8\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"ticketBuyer\",\n    \"outputs\": [{\n      \"internalType\": \"address payable\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"ticketOf\",\n    \"outputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }];\n  const contractAddress = '0xc6953534a854a0CadD5DbCEA9FbD4Da27980AcEE';\n  const [remainingTickets, setRemainingTickets] = useState(100);\n  const [amount, setAmount] = useState(0);\n  const [disable, setDisable] = useState(false);\n  const [walletStatus, setWalletStatus] = useState('Connect'); //for balance check of account\n\n  const [balance, setBalance] = useState(100);\n  const [accountAddress, setAccountAddress] = useState(''); //for check buyer ticket count\n\n  const [buyerTicketAddress, setBuyerTicketAddress] = useState('');\n  const [buyerTicketCount, setBuyerTicketCount] = useState(null); //Lottery winner\n\n  const [winner, setWinner] = useState(\"\");\n  const web3 = new Web3(provider);\n  const contract = new web3.eth.Contract(abi, contractAddress);\n  console.log(\"here is account address\", selectedAccount);\n  console.log(contract.methods);\n\n  const buyTicket = async () => {\n    const accounts = await window.ethereum.request({\n      method: 'eth_accounts'\n    });\n    const account = accounts[0];\n    setSelectedAccount(account); // const esGas= await contract.methods.buyTicket().estimateGas();\n\n    var fee = \"10000000000000000\";\n    await contract.methods.buyTicket().send({\n      from: accounts[0],\n      value: web3.utils.fromWei(fee, 'wei')\n    }).then(receipt => {\n      console.log(\"buy tkts: \", selectedAccount, \" amt: \", amount);\n    }); //return buy;\n  }; //To check the remianing lottery tickets\n\n\n  const remainTickets = async () => {\n    const rem = await contract.methods.remainingTickets().call().then(rem => {\n      setRemainingTickets(rem);\n      console.log(rem);\n    });\n  }; //======================================================\n  ///below function is to check lottery collection balance\n\n\n  const balanceOf = async () => {\n    const balance = await contract.methods.balanceOfAccount().call().then(bal => {\n      setBalance(bal); // console.log(\"balance of this account is :\",balance);\n    }).catch(err => {\n      console.log(err);\n      return;\n    });\n  };\n\n  setInterval(balanceOf, 300);\n  setInterval(remainTickets, 300); //=================================================================\n  //lottery start stop funciton below\n\n  const startLottery = async () => {\n    const accounts = await window.ethereum.request({\n      method: 'eth_accounts'\n    });\n    await contract.methods.startLottery().send({\n      from: accounts[0]\n    }).then(() => {\n      console.log(\"Lottery has been started succesfully\");\n    });\n  };\n\n  const stopLottery = async () => {\n    const accounts = await window.ethereum.request({\n      method: 'eth_accounts'\n    });\n    await contract.methods.stopLottery().send({\n      from: accounts[0]\n    }).then(() => {\n      console.log(\"Lottery has been stopped succesfully\");\n    });\n  };\n\n  const startNewLottery = async () => {\n    const accounts = await window.ethereum.request({\n      method: 'eth_accounts'\n    });\n    await contract.methods.startNewLottery().send({\n      from: accounts[0]\n    }).then(() => {\n      console.log(\"Lottery has been stopped succesfully\");\n    });\n  }; //==================================\n\n\n  const selectWinner = async () => {\n    const accounts = await window.ethereum.request({\n      method: 'eth_accounts'\n    });\n    await contract.methods.selectWinner().send({\n      from: accounts[0]\n    }).then(() => {\n      console.log(\"succesfully winner selected\");\n\n      /*#__PURE__*/\n      _jsxDEV(\"h3\", {\n        children: \"Succesfuly selected winner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1248,\n        columnNumber: 4\n      }, this); //lotteryWinner();\n\n    });\n  };\n\n  const ownerTicketCount = async () => {\n    //const accounts = await  window.ethereum.request({method: 'eth_accounts'});\n    await contract.methods.buyerTicketCount(buyerTicketAddress).call().then(count => {\n      console.log(buyerTicketCount, \": has \", count, \" :Tickets\");\n      setBuyerTicketCount(count);\n    });\n  };\n\n  const claimReward = async () => {\n    const accounts = await window.ethereum.request({\n      method: 'eth_accounts'\n    });\n    await contract.methods.claimReward().send({\n      from: accounts[0]\n    }).then(() => {\n      console.log(\"Reward claimed by the winner\");\n\n      /*#__PURE__*/\n      _jsxDEV(\"h3\", {\n        children: \"Succesfully Rewarded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1269,\n        columnNumber: 4\n      }, this);\n    });\n  };\n\n  const claimFund = async () => {\n    const accounts = await window.ethereum.request({\n      method: 'eth_accounts'\n    });\n    await contract.methods.claimFunds().send({\n      from: accounts[0]\n    }).then(() => {\n      console.log(\"Fund claimed by the manager\");\n\n      /*#__PURE__*/\n      _jsxDEV(\"h3\", {\n        children: \"Succesfully Funded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1278,\n        columnNumber: 4\n      }, this);\n    });\n  };\n\n  const lotteryWinner = async () => {\n    await contract.methods.currentLotteryWinner().call().then(addr => {\n      console.log(\"Last Lottery Winner is : \", addr);\n      setWinner(addr);\n\n      /*#__PURE__*/\n      _jsxDEV(\"h3\", {\n        children: [\"Last Lottery Winner is : \", winner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1287,\n        columnNumber: 5\n      }, this);\n    });\n  };\n\n  setInterval(lotteryWinner, 500);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mid1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"midH1\",\n          children: \"Lottery System Smart Contract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1299,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          id: \"connectButton\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              connectMetamask();\n              setDisable(true);\n              setWalletStatus('Connected');\n            },\n            className: \"button\",\n            disabled: disable,\n            children: walletStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1300,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1300,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1298,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mid2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Lottery Address: \", contractAddress]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1309,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Lottery Ticket Price : 10000000Gwei\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1311,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Last Lottery Winner : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1312,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: winner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1312,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Lottery Ticket Remaining : \", remainingTickets, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1313,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Lottery Balance : \", balance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1314,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Check the how much tickets you have\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1316,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Enter the address\",\n            onChange: e => setBuyerTicketAddress(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1317,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => ownerTicketCount(),\n            children: \"Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1317,\n            columnNumber: 107\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Address :\", buyerTicketAddress, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1318,\n              columnNumber: 41\n            }, this), \" Count : \", buyerTicketCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1318,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"enter the address of account\",\n            onChange: e => setAccountAddress(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1320,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => balanceOf(),\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1321,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1307,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"right\",\n          className: \"btn-group\",\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: e => startLottery(),\n              className: \"button\",\n              children: \"Start Lottery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1327,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: e => stopLottery(),\n              className: \"button\",\n              children: \"Stop Lottery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1328,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => buyTicket(),\n              className: \"button\",\n              children: \"Buy Ticket\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1329,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: e => startNewLottery(),\n              className: \"button\",\n              children: \"Start New Lottery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1330,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: e => selectWinner(),\n              className: \"button\",\n              children: \"Select Winner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1331,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: e => claimReward(),\n              className: \"button\",\n              children: \"Claim Reward\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1332,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: e => claimFund(),\n              className: \"button\",\n              children: \"Claim Funds\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1333,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1326,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1325,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1306,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1296,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"fdKRg2K7TJOxr0elEgRensgSktk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/React_app/my-app/src/App.js"],"names":["parseEther","Button","Stack","React","useState","Web3","App","selectedAccount","setSelectedAccount","provider","window","ethereum","connectMetamask","request","method","then","accounts","account","console","log","catch","err","on","abi","contractAddress","remainingTickets","setRemainingTickets","amount","setAmount","disable","setDisable","walletStatus","setWalletStatus","balance","setBalance","accountAddress","setAccountAddress","buyerTicketAddress","setBuyerTicketAddress","buyerTicketCount","setBuyerTicketCount","winner","setWinner","web3","contract","eth","Contract","methods","buyTicket","fee","send","from","value","utils","fromWei","receipt","remainTickets","rem","call","balanceOf","balanceOfAccount","bal","setInterval","startLottery","stopLottery","startNewLottery","selectWinner","ownerTicketCount","count","claimReward","claimFund","claimFunds","lotteryWinner","currentLotteryWinner","addr","e","target"],"mappings":";;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AAGJ;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AAIA;AACA;AAIC;AAED;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAKA;AAEA;AAGA,SAASA,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAGA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;;AAEA,MAAMC,GAAG,GAAC,MAAI;AAAA;;AAEd;AACA,QAAM,CAACC,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","sourcesContent":["// import React from 'react';\r\n\r\n// function Card(props)\r\n// {\r\n//     return(\r\n//     <>\r\n//     <div className=\"cards\">\r\n//         <div className=\"card\">\r\n//             <img className=\"card_image\" src={props.imgSrc} alt=\"MyPic\"/>\r\n//             <div className=\"card_info\">\r\n//                 <span className=\"card_category\"></span>\r\n//                 <h3 className=\"class_title\"></h3>\r\n//                 <a href={props.link}>\r\n//                     <button>Watch Now</button>\r\n//                 </a>\r\n//             </div>\r\n//         </div>\r\n\r\n//     </div>\r\n//     </>\r\n//     );\r\n// }\r\n\r\n// export default Card;\r\n//=======================================\r\n// import React from \"react\";\r\n// const {ethers}=require('ethers');\r\n\r\n// let contract;\r\n// const App=()=>{\r\n//     const ethereum =window.ethereum;\r\n    \r\n    \r\n   \r\n//     let abi=[\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"balance\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"getBalance\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"_balance\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"setBalance\",\r\n//             \"outputs\": [],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         }\r\n//     ];\r\n//     let conAddress=\"0xd6dfe26Ef82b4343AFE0343367CF3c5d50aFdadb\";\r\n\r\n//   //contract=new ethereum.eth.Contract(abi,conAddress);\r\n    \r\n\r\n//     const login=async()=>{\r\n    \r\n//         if(ethereum){\r\n//             ethereum.request({ method: 'eth_requestAccounts' });\r\n//            // console.log(ethereum.request({ method: 'eth_getBalance' }));\r\n//            // console.log()\r\n//             }\r\n//         else{\r\n//             console.log(\"Install Metamask\");\r\n//         }\r\n//         contract = new ethers.Contract(conAddress,abi);\r\n//         const setData= await contract.setBalance(10);\r\n//         const getData= await contract.getBalance();\r\n//         console.log(getData.toString());\r\n    \r\n//     }\r\n\r\n       \r\n        \r\n\r\n\r\n//     return(\r\n//         <>\r\n//         <h1 className=\"mainHeading\">Ethereum Dapp</h1>\r\n//         <span>Login to Metamask to connect to Rinkeby<br></br></span>\r\n//         <button className=\"loginBtn\" onClick={login}>Login</button><br></br>\r\n//         <input type=\"text\"></input>\r\n//         <button className=\"transferBtn\">Transfer</button>\r\n//         <button className=\"transferBtn\">GetBalance</button>\r\n//         </>\r\n//     );\r\n// }\r\n// export default App;\r\n\r\n//==========================================================\r\n//==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>\r\n// import React,{useState} from 'react'\r\n// import {ethers} from 'ethers'\r\n\r\n\r\n\r\n\r\n// const App=()=>{\r\n\r\n//     const [balance,balanceUpdate]=useState(null);\r\n//     const [LoginButtonTxt,setLoginButtonText]=useState('MetaMask Login');\r\n//     const [defaultAddress,setDefaultAddress]=useState(null);\r\n    \r\n\r\n//     const AppHandler=()=>{\r\n        \r\n//         if(window.ethereum&&window.ethereum.isMetaMask){\r\n//             console.log(\"Metamask running\");\r\n//             window.ethereum.request({method: 'eth_requestAccounts'})\r\n//             .then(result=>{\r\n//                     addressSet(result[0]);\r\n//                     setLoginButtonText('MetaMask Connected');\r\n                    \r\n//             })\r\n//         }\r\n//     }\r\n\r\n//     const addressSet=(newAccount)=>\r\n//     {\r\n//         setDefaultAddress(newAccount);\r\n//     }\r\n\r\n//     const getBalance=(newAddress)=>{\r\n//         window.ethereum.request({method: 'eth_getBalance', params: [newAddress,'latest']})\r\n//         .then(balance=>{\r\n//                 balanceUpdate(ethers.utils.formatEther(balance));\r\n//                 console.log(\"running\");\r\n//         })\r\n//         console.log(\"getbalance button running\");\r\n//     }\r\n\r\n//     return(\r\n//         <>\r\n\r\n//         <h1>Ethereum Dapp <button onClick={AppHandler}>{LoginButtonTxt}</button></h1>\r\n\r\n//         <br>\r\n//         </br>\r\n//         <input type=\"text\" value=\"Enter to No of Token to transfer\"/>\r\n//         <br></br>\r\n//         <input type='text' value=\"Address of Receiver\"/><button>Transfer Token</button>\r\n//         <br></br>\r\n//         <h2>balance= {balance}</h2>\r\n//         <button onClick={getBalance(defaultAddress)}>GetBalance</button>\r\n\r\n\r\n//         </>\r\n//     );\r\n// }\r\n// export default App;\r\n\r\n\r\n//==>===========================================<=============\r\n\r\n//==>DIGITAL CLOCK CODE BELOW\r\n// import React, { useState } from 'react'\r\n\r\n// const App=()=>\r\n// {\r\n//     let time= new Date().toLocaleTimeString();\r\n//     const [currentTime,SetTime]=useState(time);\r\n\r\n//     const [cColor,SetColor]=useState('purple');\r\n\r\n//     const changeBg=()=>{\r\n//         let color='green';\r\n//         SetColor(color);\r\n//     }\r\n\r\n//     const backToNormal=()=>{\r\n//         let color='purple';\r\n//         SetColor(color);\r\n//     }\r\n\r\n//     const UpdateTime=()=>\r\n//     {\r\n\r\n//         time= new Date().toLocaleTimeString();\r\n//         SetTime  (time);\r\n//     };\r\n\r\n//     setInterval(UpdateTime,100);\r\n\r\n//     return(\r\n//         <>\r\n//         <div style={{backgroundColor:cColor}}>\r\n//             <h1 onMouseEnter={changeBg} onMouseLeave={backToNormal}>{currentTime}</h1>\r\n//             </div>\r\n//         </>\r\n//     );\r\n\r\n// }\r\n\r\n// export default App;\r\n\r\n//=====================\r\n\r\n// import React, { useState } from \"react\";\r\n// import {ethers} from 'ethers'\r\n// import Web3 from 'web3';\r\n\r\n\r\n\r\n//  const App=()=>{\r\n\r\n//     let conAddress=\"0x7e182c1433eABB36b7cF855cDF49ADa30EaEF7E0\";\r\n    \r\n//     let abi=[\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"get\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"_value\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"set\",\r\n//             \"outputs\": [],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"value\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         }\r\n//     ];\r\n    // const provider = new ethers.providers.Web3Provider(web3.currentProvider);\r\n    // let provider = new ethers.providers.JsonRpcProvider()\r\n    // let provider =ethers.getDefaultProvider();\r\n    // const contract= new ethers.Contract(conAddress,abi,provider);\r\n\r\n\r\n//     const web3 = new Web3(window.ethereum);\r\n//     const ethObj = new web3.eth.Contract(abi, conAddress);\r\n//     console.log(ethObj.methods,\"my Methods\");\r\n\r\n//     const [getNumber,setGetNumber]=useState('');\r\n//     const [number,setNumber]=useState(0);\r\n\r\n\r\n//     let connectMetamask=()=>{\r\n//         if(window.ethereum)\r\n//         {\r\n//             window.ethereum.request({method: 'eth_requestAccounts'});\r\n//             console.log(\"Metamask Connected\");\r\n//         }\r\n//     }\r\n\r\n//     const getBalance=async(e)=>{\r\n//         e.preventDefault();\r\n\r\n//         const result= await ethObj.methods.get().call();\r\n//         console.log(\"Test con obj : \",result);\r\n//         setGetNumber(result);\r\n//         console.log(result);\r\n//         console.log(\"contract\",ethObj);\r\n\r\n        \r\n//     }\r\n\r\n//     const setBalance=async(e)=>{\r\n//         e.preventDefault();\r\n//         const accounts=await window.ethereum.enable();\r\n//         const account=accounts[0];\r\n//         const gas= await ethObj.methods.set(number).estimateGas();\r\n        \r\n//         const result= await ethObj.methods.set(number).send({from: account,gas})\r\n//         //setNumber(result);\r\n//         console.log(result);\r\n//     }\r\n\r\n//     return(\r\n\r\n//         <>\r\n//         <h1>Smart Contract Integration</h1>\r\n//         <button onClick={connectMetamask}>Connect Metamask</button>\r\n\r\n//         <form onSubmit={setBalance}>\r\n\r\n//             <label>\r\n//                 Set Number : <input type=\"text\" value={number} onChange={e=>setNumber(e.target.value)}></input>\r\n\r\n//             </label>\r\n//             <input type=\"submit\" value=\"Set Number\"></input>\r\n//             </form>\r\n        \r\n\r\n//         <button onClick={getBalance} type=\"button\">Get Number</button>{getNumber}\r\n//         </>\r\n\r\n//     );\r\n\r\n\r\n\r\n//  }\r\n//  export default App;\r\n\r\n\r\n\r\n //==============erc20 smart contrat with front end;\r\n\r\n//  import React,{ useState} from 'react'\r\n//  import Web3 from 'web3'\r\n\r\n\r\n \r\n \r\n\r\n//  const App=()=>{\r\n\r\n//     const [userAccount,setUserAccount]=useState(\"\");\r\n//     const [amount,setAmount]=useState(0);\r\n//     const [metamaskStatus,setMetamaskStatus]=useState(\"Connect Metamask\");\r\n//     //below to check  total token\r\n//     const [balance,setBalance]=useState(0);\r\n\r\n//     const conAddress=\"0x83cC5ae4996909726f090E64DE5105013aF55050\";\r\n//     const abi=[\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"constructor\"\r\n//         },\r\n//         {\r\n//             \"anonymous\": false,\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"indexed\": true,\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"owner\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"indexed\": true,\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"spender\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"indexed\": false,\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"value\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"Approval\",\r\n//             \"type\": \"event\"\r\n//         },\r\n//         {\r\n//             \"anonymous\": false,\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"indexed\": true,\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"previousOwner\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"indexed\": true,\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"newOwner\",\r\n//                     \"type\": \"address\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"OwnershipTransferred\",\r\n//             \"type\": \"event\"\r\n//         },\r\n//         {\r\n//             \"anonymous\": false,\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"indexed\": true,\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"from\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"indexed\": true,\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"to\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"indexed\": false,\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"value\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"Transfer\",\r\n//             \"type\": \"event\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"owner\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"spender\",\r\n//                     \"type\": \"address\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"allowance\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"spender\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"amount\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"approve\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"bool\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"bool\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"account\",\r\n//                     \"type\": \"address\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"balanceOf\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"decimals\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint8\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint8\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"spender\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"subtractedValue\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"decreaseAllowance\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"bool\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"bool\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"spender\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"addedValue\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"increaseAllowance\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"bool\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"bool\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"to\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"amount\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"mint\",\r\n//             \"outputs\": [],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"name\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"string\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"string\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"owner\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"address\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"renounceOwnership\",\r\n//             \"outputs\": [],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"symbol\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"string\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"string\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"totalSupply\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"recipient\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"amount\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"transfer\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"bool\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"bool\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"sender\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"recipient\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"amount\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"transferFrom\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"bool\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"bool\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"newOwner\",\r\n//                     \"type\": \"address\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"transferOwnership\",\r\n//             \"outputs\": [],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         }\r\n//     ];\r\n//     const web3= new Web3(window.ethereum);\r\n    \r\n\r\n//     const contract = new web3.eth.Contract(abi,conAddress);\r\n//     console.log(contract.methods);\r\n\r\n//     let connectMetamask=()=>{\r\n//                 if(window.ethereum)\r\n//                 {\r\n//                     window.ethereum.request({method: 'eth_requestAccounts'});\r\n//                     console.log(\"Metamask Connected\");\r\n//                     setMetamaskStatus(\"Connected\");\r\n                    \r\n//                 }\r\n                \r\n//             }\r\n\r\n//     const sendToken=async()=>{\r\n        \r\n        \r\n//         // const accounts= await window.ethereum.enable();\r\n//         const accounts = await  window.ethereum.request({method: 'eth_accounts'});\r\n//         const account= accounts[0];\r\n//         console.log(\"acoount address\",account);\r\n//         const gas= await contract.methods.transfer(userAccount,amount).estimateGas();\r\n//         const result= await contract.methods.transfer(userAccount,amount).sendTransaction({from:account,gas,amount});\r\n\r\n//         console.log(result);\r\n//         //await contract.methods.transfer(userAccount,amount);\r\n//         //await transaction.wait();\r\n\r\n//         console.log(`${amount} has been succesfully transfer to account : ${userAccount}`);\r\n        \r\n    \r\n\r\n// }\r\n//     const balanceOf=async()=>{\r\n//         const result= await contract.methods.balanceOf(balance).call();\r\n//         setBalance(result);\r\n\r\n//     }\r\n\r\n//     return(\r\n\r\n//         <>\r\n//         <h1>My Token</h1>\r\n//         <br></br>\r\n//         <button onClick={connectMetamask}>{metamaskStatus}</button>\r\n//         <br></br>\r\n//         <input type=\"text\" onChange={e=>setUserAccount(e.target.value)} placeholder=\"Enter receiver address\"/>\r\n//         <input type=\"text\" onChange={e=>setAmount(e.target.value)} placeholder=\"Enter Amount of Token\"/>\r\n//         <button onClick={sendToken}>Transfer Token</button>\r\n//         <br></br>\r\n//         <input type=\"text\" onChange={e=>setBalance(e.target.value)} placeholder=\"Enter Address\"/>\r\n//         <button onClick={balanceOf}>Balance</button>{balance}\r\n\r\n\r\n//         </>\r\n//     );\r\n\r\n//  }\r\n\r\n//  export default App;\r\n\r\n//===============================================\r\n//lottery system app below\r\n\r\n// import React from \"react\";\r\n// import Web3 from 'web3'\r\n\r\n\r\n// const App=()=>{\r\n\r\n//     return(\r\n//         <h1>nabeel</h1>\r\n//     );\r\n\r\n\r\n\r\n\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\nimport { parseEther } from 'ethers/lib/utils';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n\r\nimport React, { useState } from 'react'\r\nimport Web3 from 'web3';\r\n\r\nconst App=()=>{\r\n\r\n// let selectedAccount;\r\nconst [selectedAccount,setSelectedAccount]=useState(\"\");\r\nlet provider=window.ethereum;\r\nlet connectMetamask=()=>{\r\n\r\n  \r\n\r\n    if(provider!==\"undefined\")\r\n    {\r\n        provider.request({method : 'eth_requestAccounts',})\r\n                  .then((accounts)=>{\r\n\t\t\t\t\t  const account=accounts[0];\r\n                    setSelectedAccount(account);\r\n                    console.log(`slected Account is ${account}`);\r\n\t\t\t\t\tconsole.log('selected accoutn is : ',account);\r\n\r\n                  })\r\n                  .catch((err) => {\r\n                    console.log(err);\r\n                    return;\r\n                  });\r\n\r\n                  provider.on('accountsChanged', function(accounts){\r\n                      setSelectedAccount(accounts[0]);\r\n                      console.log(`selected account changed to ${accounts[0]}`);\r\n\r\n                  })\r\n\r\n                \r\n\r\n    }\r\n  }\r\n\r\n  const abi =[\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"buyTicket\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"claimFunds\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"claimReward\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"requestId\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"randomness\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"rawFulfillRandomness\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"selectWinner\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"_vrfCoordinator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"_link\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"_keyhash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"previousOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"OwnershipTransferred\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"renounceOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"requestId\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"RequestedRandomness\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"startLottery\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"startNewLottery\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"stopLottery\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"balanceOfAccount\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"buyerTicketCount\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"currentLotteryWinner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address payable\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"fee\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"lotteryId\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"randomness\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"remainingTickets\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"status\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"enum Lottery.lotteryStatus\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint8\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ticketBuyer\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address payable\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ticketOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];\r\n\r\n    const contractAddress='0xc6953534a854a0CadD5DbCEA9FbD4Da27980AcEE';\r\n\r\n    const [remainingTickets,setRemainingTickets]=useState(100);\r\n\tconst [amount,setAmount]=useState(0);\r\n\tconst [disable, setDisable] = useState(false);\r\n\tconst [walletStatus,setWalletStatus]=useState('Connect');\r\n\t//for balance check of account\r\n\tconst [balance,setBalance]=useState(100);\r\n\tconst [accountAddress,setAccountAddress]=useState('');\r\n\r\n\t//for check buyer ticket count\r\n\tconst [buyerTicketAddress,setBuyerTicketAddress]= useState('');\r\n\tconst [buyerTicketCount,setBuyerTicketCount]= useState(null);\r\n\t\r\n\t//Lottery winner\r\n\tconst [winner,setWinner]=useState(\"\");\r\n\r\n    const web3 = new Web3(provider);\r\n    \r\n    const contract= new web3.eth.Contract(abi,contractAddress);\r\n\tconsole.log(\"here is account address\",selectedAccount);\r\n\tconsole.log(contract.methods)\r\n\r\n\r\n    const buyTicket= async()=>{\r\n\r\n\t\t const accounts = await  window.ethereum.request({method: 'eth_accounts'});\r\n          const account= accounts[0];\r\n\t\t\t setSelectedAccount(account);\r\n\t\t\r\n\r\n        // const esGas= await contract.methods.buyTicket().estimateGas();\r\n\t\tvar fee  = \"10000000000000000\"\r\n        await contract.methods.buyTicket().send({from:accounts[0],value: web3.utils.fromWei(fee, 'wei')\r\n\t\t})\r\n\t\t\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t.then((receipt)=>{\r\n\t\t\t\t\t\t\tconsole.log(\"buy tkts: \",selectedAccount, \" amt: \",amount,);\r\n\t\t\t\t\t\t});\r\n        //return buy;\r\n\t\t\r\n                    \r\n    }\r\n\r\n\t//To check the remianing lottery tickets\r\n\r\n    const remainTickets=async()=>{\r\n        const rem= await contract.methods.remainingTickets().call().then((rem)=>{\r\n            setRemainingTickets(rem);\r\n\t\t\tconsole.log(rem);\r\n\r\n        });\r\n    }\r\n\t//======================================================\r\n\r\n\t///below function is to check lottery collection balance\r\n\tconst balanceOf=async()=>{\r\n\t\t\r\n\t\tconst balance=\tawait contract.methods.balanceOfAccount().call().then((bal)=>{\r\n\t\t\t\tsetBalance(bal)\r\n\t\t\t\t\r\n\t\t\t\t// console.log(\"balance of this account is :\",balance);\r\n\t\t}).catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn;\r\n\t\t  });\r\n\t}\r\n\r\n\tsetInterval(balanceOf,300);\r\n\tsetInterval(remainTickets,300);\r\n\t\r\n\t//=================================================================\r\n\t//lottery start stop funciton below\r\n\tconst startLottery=async()=>\r\n\t{\r\n\t\tconst accounts = await  window.ethereum.request({method: 'eth_accounts'});\r\n\t\tawait contract.methods.startLottery().send({from : accounts[0] }).then(()=>{\r\n\t\t\tconsole.log(\"Lottery has been started succesfully\");\r\n\t\t})\r\n\t}\r\n\r\n\tconst stopLottery=async()=>{\r\n\t\tconst accounts = await  window.ethereum.request({method: 'eth_accounts'});\r\n\t\tawait contract.methods.stopLottery().send({from : accounts[0] }).then(()=>{\r\n\t\t\tconsole.log(\"Lottery has been stopped succesfully\");\r\n\t\t})\r\n\t}\r\n    \r\n\tconst startNewLottery=async()=>{\r\n\t\tconst accounts = await  window.ethereum.request({method: 'eth_accounts'});\r\n\t\tawait contract.methods.startNewLottery().send({from : accounts[0] })\r\n\t\t.then(()=>{\r\n\t\t\tconsole.log(\"Lottery has been stopped succesfully\");\r\n\t\t});\r\n\t}\r\n\t//==================================\r\n\r\n\tconst selectWinner=async()=>{\r\n\t\tconst accounts = await  window.ethereum.request({method: 'eth_accounts'});\r\n\t\tawait contract.methods.selectWinner().send({from : accounts[0]})\r\n\t\t.then(()=>{\r\n\t\t\tconsole.log(\"succesfully winner selected\");\r\n\t\t\t<h3>Succesfuly selected winner</h3>\r\n\t\t\t//lotteryWinner();\r\n\t\t})\r\n\t\t\r\n\r\n\t}\r\n\r\n\tconst ownerTicketCount=async()=>{\r\n\t\t//const accounts = await  window.ethereum.request({method: 'eth_accounts'});\r\n\t\tawait contract.methods.buyerTicketCount(buyerTicketAddress).call().then((count)=>{\r\n\t\t\tconsole.log(buyerTicketCount,\": has \",count,\" :Tickets\");\r\n\t\t\tsetBuyerTicketCount(count);\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tconst claimReward=async()=>{\r\n\t\tconst accounts = await  window.ethereum.request({method: 'eth_accounts'});\r\n\t\tawait contract.methods.claimReward().send({from : accounts[0]})\r\n\t\t.then(()=>{\r\n\t\t\tconsole.log(\"Reward claimed by the winner\");\r\n\t\t\t<h3>Succesfully Rewarded</h3>\r\n\t\t});\r\n\t}\r\n\r\n\tconst claimFund=async()=>{\r\n\t\tconst accounts = await  window.ethereum.request({method: 'eth_accounts'});\r\n\t\tawait contract.methods.claimFunds().send({from : accounts[0]})\r\n\t\t.then(()=>{\r\n\t\t\tconsole.log(\"Fund claimed by the manager\");\r\n\t\t\t<h3>Succesfully Funded</h3>\r\n\t\t});\r\n\t}\r\n\r\n\tconst lotteryWinner=async()=>{\r\n\t\tawait contract.methods.currentLotteryWinner().call()\r\n\t\t.then((addr)=>{\r\n\t\t\t\tconsole.log(\"Last Lottery Winner is : \",addr);\r\n\t\t\t\tsetWinner(addr);\r\n\t\t\t\t<h3>Last Lottery Winner is : {winner}</h3>\r\n\t\t});\r\n\t}\r\n\tsetInterval(lotteryWinner,500);\r\n\t\r\n\r\n    return(\r\n      <>\r\n\t  \r\n\t\t\t<div id='mid'>\r\n\t\t\t\t\r\n\t\t\t\t<div id='mid1'>\r\n\t\t\t\t\t<h1 id='midH1'>Lottery System Smart Contract</h1>\r\n\t\t\t\t\t<h3 id='connectButton'><button onClick={()=>{\r\n\t\t\t\t\t\tconnectMetamask();\r\n\t\t\t\t\t\tsetDisable(true);\r\n\t\t\t\t\t\tsetWalletStatus('Connected')\r\n\t\t\t\t\t\t}} className='button' disabled={disable}>{walletStatus}</button></h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div  id='mid2'>\r\n\t\t\t\t\t\t<div id='left'>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h4>Lottery Address: {contractAddress}</h4>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h4>Lottery Ticket Price : 10000000Gwei</h4>\r\n\t\t\t\t\t\t\t<h4>Last Lottery Winner : </h4><p>{winner}</p>\r\n\t\t\t\t\t\t\t<h4>Lottery Ticket Remaining : {remainingTickets} </h4>\r\n\t\t\t\t\t\t\t<h4>Lottery Balance : {balance}</h4>\r\n\r\n\t\t\t\t\t\t\t\t<h3>Check the how much tickets you have</h3>\r\n\t\t\t\t\t\t\t<input placeholder='Enter the address' onChange={e=>setBuyerTicketAddress(e.target.value)}></input><button onClick={()=>ownerTicketCount()}>Check</button>\r\n\t\t\t\t\t\t\t<h4>Address :{buyerTicketAddress}<br></br> Count : {buyerTicketCount}</h4>\r\n\t\t\t \r\n\t\t\t\t\t\t\t<input placeholder='enter the address of account' onChange={e=>setAccountAddress(e.target.value)}></input>\r\n\t\t\t\t\t\t\t\t<button onClick={e=>balanceOf()}>submit</button>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div id='right' className='btn-group'>\r\n\t\t\t\t\t\t\t<Stack spacing={3}>\r\n\t\t\t\t\t\t\t<Button variant='contained' onClick={e=>startLottery()} className='button'>Start Lottery</Button>\r\n\t\t\t\t\t\t\t<Button variant='contained' onClick={e=>stopLottery()} className='button'>Stop Lottery</Button>\r\n\t\t\t\t\t\t\t<Button variant='contained' onClick={()=>buyTicket()} className='button'>Buy Ticket</Button>\r\n\t\t\t\t\t\t\t<Button variant='contained' onClick={e=>startNewLottery()} className='button'>Start New Lottery</Button>\r\n\t\t\t\t\t\t\t<Button variant='contained' onClick={e=>selectWinner()} className='button'>Select Winner</Button>\r\n\t\t\t\t\t\t\t<Button variant='contained' onClick={e=>claimReward()} className='button'>Claim Reward</Button>\r\n\t\t\t\t\t\t\t<Button variant='contained' onClick={e=>claimFund()} className='button'>Claim Funds</Button>\r\n\t\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t  \r\n     \r\n\t\t \r\n\t\t\r\n      </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}