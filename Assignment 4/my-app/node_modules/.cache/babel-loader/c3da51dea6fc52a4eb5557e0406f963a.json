{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_app\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\n// function Card(props)\n// {\n//     return(\n//     <>\n//     <div className=\"cards\">\n//         <div className=\"card\">\n//             <img className=\"card_image\" src={props.imgSrc} alt=\"MyPic\"/>\n//             <div className=\"card_info\">\n//                 <span className=\"card_category\"></span>\n//                 <h3 className=\"class_title\"></h3>\n//                 <a href={props.link}>\n//                     <button>Watch Now</button>\n//                 </a>\n//             </div>\n//         </div>\n//     </div>\n//     </>\n//     );\n// }\n// export default Card;\n//=======================================\n// import React from \"react\";\n// const {ethers}=require('ethers');\n// let contract;\n// const App=()=>{\n//     const ethereum =window.ethereum;\n//     let abi=[\n//         {\n//             \"inputs\": [],\n//             \"name\": \"balance\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [],\n//             \"name\": \"getBalance\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"_balance\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"setBalance\",\n//             \"outputs\": [],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         }\n//     ];\n//     let conAddress=\"0xd6dfe26Ef82b4343AFE0343367CF3c5d50aFdadb\";\n//   //contract=new ethereum.eth.Contract(abi,conAddress);\n//     const login=async()=>{\n//         if(ethereum){\n//             ethereum.request({ method: 'eth_requestAccounts' });\n//            // console.log(ethereum.request({ method: 'eth_getBalance' }));\n//            // console.log()\n//             }\n//         else{\n//             console.log(\"Install Metamask\");\n//         }\n//         contract = new ethers.Contract(conAddress,abi);\n//         const setData= await contract.setBalance(10);\n//         const getData= await contract.getBalance();\n//         console.log(getData.toString());\n//     }\n//     return(\n//         <>\n//         <h1 className=\"mainHeading\">Ethereum Dapp</h1>\n//         <span>Login to Metamask to connect to Rinkeby<br></br></span>\n//         <button className=\"loginBtn\" onClick={login}>Login</button><br></br>\n//         <input type=\"text\"></input>\n//         <button className=\"transferBtn\">Transfer</button>\n//         <button className=\"transferBtn\">GetBalance</button>\n//         </>\n//     );\n// }\n// export default App;\n//==========================================================\n//==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>\n// import React,{useState} from 'react'\n// import {ethers} from 'ethers'\n// const App=()=>{\n//     const [balance,balanceUpdate]=useState(null);\n//     const [LoginButtonTxt,setLoginButtonText]=useState('MetaMask Login');\n//     const [defaultAddress,setDefaultAddress]=useState(null);\n//     const AppHandler=()=>{\n//         if(window.ethereum&&window.ethereum.isMetaMask){\n//             console.log(\"Metamask running\");\n//             window.ethereum.request({method: 'eth_requestAccounts'})\n//             .then(result=>{\n//                     addressSet(result[0]);\n//                     setLoginButtonText('MetaMask Connected');\n//             })\n//         }\n//     }\n//     const addressSet=(newAccount)=>\n//     {\n//         setDefaultAddress(newAccount);\n//     }\n//     const getBalance=(newAddress)=>{\n//         window.ethereum.request({method: 'eth_getBalance', params: [newAddress,'latest']})\n//         .then(balance=>{\n//                 balanceUpdate(ethers.utils.formatEther(balance));\n//                 console.log(\"running\");\n//         })\n//         console.log(\"getbalance button running\");\n//     }\n//     return(\n//         <>\n//         <h1>Ethereum Dapp <button onClick={AppHandler}>{LoginButtonTxt}</button></h1>\n//         <br>\n//         </br>\n//         <input type=\"text\" value=\"Enter to No of Token to transfer\"/>\n//         <br></br>\n//         <input type='text' value=\"Address of Receiver\"/><button>Transfer Token</button>\n//         <br></br>\n//         <h2>balance= {balance}</h2>\n//         <button onClick={getBalance(defaultAddress)}>GetBalance</button>\n//         </>\n//     );\n// }\n// export default App;\n//==>===========================================<=============\n//==>DIGITAL CLOCK CODE BELOW\n// import React, { useState } from 'react'\n// const App=()=>\n// {\n//     let time= new Date().toLocaleTimeString();\n//     const [currentTime,SetTime]=useState(time);\n//     const [cColor,SetColor]=useState('purple');\n//     const changeBg=()=>{\n//         let color='green';\n//         SetColor(color);\n//     }\n//     const backToNormal=()=>{\n//         let color='purple';\n//         SetColor(color);\n//     }\n//     const UpdateTime=()=>\n//     {\n//         time= new Date().toLocaleTimeString();\n//         SetTime  (time);\n//     };\n//     setInterval(UpdateTime,100);\n//     return(\n//         <>\n//         <div style={{backgroundColor:cColor}}>\n//             <h1 onMouseEnter={changeBg} onMouseLeave={backToNormal}>{currentTime}</h1>\n//             </div>\n//         </>\n//     );\n// }\n// export default App;\n//=====================\nimport React, { useState } from \"react\"; // import {ethers} from 'ethers'\n\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let conAddress = \"0x7e182c1433eABB36b7cF855cDF49ADa30EaEF7E0\";\n  let abi = [{\n    \"inputs\": [],\n    \"name\": \"get\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"_value\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"set\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"value\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }]; // const provider = new ethers.providers.Web3Provider(web3.currentProvider);\n  // let provider = new ethers.providers.JsonRpcProvider()\n  // let provider =ethers.getDefaultProvider();\n  // const contract= new ethers.Contract(conAddress,abi,provider);\n\n  const web3 = new Web3(window.ethereum);\n  const ethObj = new web3.eth.Contract(abi, conAddress);\n  console.log(ethObj.methods, \"my Methods\");\n  const [getNumber, setGetNumber] = useState('');\n  const [number, setNumber] = useState(0);\n\n  let connectMetamask = () => {\n    if (window.ethereum) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log(\"Metamask Connected\");\n    }\n  };\n\n  const getBalance = async e => {\n    e.preventDefault();\n    const result = await ethObj.methods.get().call();\n    console.log(\"Test con obj : \", result);\n    setGetNumber(result);\n    console.log(result);\n    console.log(\"contract\", ethObj);\n  };\n\n  const setBalance = async e => {\n    e.preventDefault();\n    const accounts = window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await ethObj.methods.set(number).estimateGas();\n    const result = await ethObj.methods.set(number).send({\n      from: account,\n      gas\n    });\n    console.log(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Smart Contract Integration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectMetamask,\n      children: \"Connect Metamask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: setBalance,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Set Number : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: number,\n          onChange: e => setNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Set Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getBalance,\n      type: \"button\",\n      children: \"Get Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }, this), getNumber]\n  }, void 0, true);\n};\n\n_s(App, \"bIUFPFH0RAWaNd+LBMLWMNpFf1s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/React_app/my-app/src/App.js"],"names":["React","useState","Web3","App","conAddress","abi","web3","window","ethereum","ethObj","eth","Contract","console","log","methods","getNumber","setGetNumber","number","setNumber","connectMetamask","request","method","getBalance","e","preventDefault","result","get","call","setBalance","accounts","enable","account","gas","set","estimateGas","send","from","target","value"],"mappings":";;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;;AAIC,MAAMC,GAAG,GAAC,MAAI;AAAA;;AAEX,MAAIC,UAAU,GAAC,4CAAf;AAEA,MAAIC,GAAG,GAAC,CACJ;AACI,cAAU,EADd;AAEI,YAAQ,KAFZ;AAGI,eAAW,CACP;AACI,sBAAgB,SADpB;AAEI,cAAQ,EAFZ;AAGI,cAAQ;AAHZ,KADO,CAHf;AAUI,uBAAmB,MAVvB;AAWI,YAAQ;AAXZ,GADI,EAcJ;AACI,cAAU,CACN;AACI,s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","sourcesContent":["// import React from 'react';\r\n\r\n// function Card(props)\r\n// {\r\n//     return(\r\n//     <>\r\n//     <div className=\"cards\">\r\n//         <div className=\"card\">\r\n//             <img className=\"card_image\" src={props.imgSrc} alt=\"MyPic\"/>\r\n//             <div className=\"card_info\">\r\n//                 <span className=\"card_category\"></span>\r\n//                 <h3 className=\"class_title\"></h3>\r\n//                 <a href={props.link}>\r\n//                     <button>Watch Now</button>\r\n//                 </a>\r\n//             </div>\r\n//         </div>\r\n\r\n//     </div>\r\n//     </>\r\n//     );\r\n// }\r\n\r\n// export default Card;\r\n//=======================================\r\n// import React from \"react\";\r\n// const {ethers}=require('ethers');\r\n\r\n// let contract;\r\n// const App=()=>{\r\n//     const ethereum =window.ethereum;\r\n    \r\n    \r\n   \r\n//     let abi=[\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"balance\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"getBalance\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"_balance\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"setBalance\",\r\n//             \"outputs\": [],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         }\r\n//     ];\r\n//     let conAddress=\"0xd6dfe26Ef82b4343AFE0343367CF3c5d50aFdadb\";\r\n\r\n//   //contract=new ethereum.eth.Contract(abi,conAddress);\r\n    \r\n\r\n//     const login=async()=>{\r\n    \r\n//         if(ethereum){\r\n//             ethereum.request({ method: 'eth_requestAccounts' });\r\n//            // console.log(ethereum.request({ method: 'eth_getBalance' }));\r\n//            // console.log()\r\n//             }\r\n//         else{\r\n//             console.log(\"Install Metamask\");\r\n//         }\r\n//         contract = new ethers.Contract(conAddress,abi);\r\n//         const setData= await contract.setBalance(10);\r\n//         const getData= await contract.getBalance();\r\n//         console.log(getData.toString());\r\n    \r\n//     }\r\n\r\n       \r\n        \r\n\r\n\r\n//     return(\r\n//         <>\r\n//         <h1 className=\"mainHeading\">Ethereum Dapp</h1>\r\n//         <span>Login to Metamask to connect to Rinkeby<br></br></span>\r\n//         <button className=\"loginBtn\" onClick={login}>Login</button><br></br>\r\n//         <input type=\"text\"></input>\r\n//         <button className=\"transferBtn\">Transfer</button>\r\n//         <button className=\"transferBtn\">GetBalance</button>\r\n//         </>\r\n//     );\r\n// }\r\n// export default App;\r\n\r\n//==========================================================\r\n//==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>\r\n// import React,{useState} from 'react'\r\n// import {ethers} from 'ethers'\r\n\r\n\r\n\r\n\r\n// const App=()=>{\r\n\r\n//     const [balance,balanceUpdate]=useState(null);\r\n//     const [LoginButtonTxt,setLoginButtonText]=useState('MetaMask Login');\r\n//     const [defaultAddress,setDefaultAddress]=useState(null);\r\n    \r\n\r\n//     const AppHandler=()=>{\r\n        \r\n//         if(window.ethereum&&window.ethereum.isMetaMask){\r\n//             console.log(\"Metamask running\");\r\n//             window.ethereum.request({method: 'eth_requestAccounts'})\r\n//             .then(result=>{\r\n//                     addressSet(result[0]);\r\n//                     setLoginButtonText('MetaMask Connected');\r\n                    \r\n//             })\r\n//         }\r\n//     }\r\n\r\n//     const addressSet=(newAccount)=>\r\n//     {\r\n//         setDefaultAddress(newAccount);\r\n//     }\r\n\r\n//     const getBalance=(newAddress)=>{\r\n//         window.ethereum.request({method: 'eth_getBalance', params: [newAddress,'latest']})\r\n//         .then(balance=>{\r\n//                 balanceUpdate(ethers.utils.formatEther(balance));\r\n//                 console.log(\"running\");\r\n//         })\r\n//         console.log(\"getbalance button running\");\r\n//     }\r\n\r\n//     return(\r\n//         <>\r\n\r\n//         <h1>Ethereum Dapp <button onClick={AppHandler}>{LoginButtonTxt}</button></h1>\r\n\r\n//         <br>\r\n//         </br>\r\n//         <input type=\"text\" value=\"Enter to No of Token to transfer\"/>\r\n//         <br></br>\r\n//         <input type='text' value=\"Address of Receiver\"/><button>Transfer Token</button>\r\n//         <br></br>\r\n//         <h2>balance= {balance}</h2>\r\n//         <button onClick={getBalance(defaultAddress)}>GetBalance</button>\r\n\r\n\r\n//         </>\r\n//     );\r\n// }\r\n// export default App;\r\n\r\n\r\n//==>===========================================<=============\r\n\r\n//==>DIGITAL CLOCK CODE BELOW\r\n// import React, { useState } from 'react'\r\n\r\n// const App=()=>\r\n// {\r\n//     let time= new Date().toLocaleTimeString();\r\n//     const [currentTime,SetTime]=useState(time);\r\n\r\n//     const [cColor,SetColor]=useState('purple');\r\n\r\n//     const changeBg=()=>{\r\n//         let color='green';\r\n//         SetColor(color);\r\n//     }\r\n\r\n//     const backToNormal=()=>{\r\n//         let color='purple';\r\n//         SetColor(color);\r\n//     }\r\n\r\n//     const UpdateTime=()=>\r\n//     {\r\n\r\n//         time= new Date().toLocaleTimeString();\r\n//         SetTime  (time);\r\n//     };\r\n\r\n//     setInterval(UpdateTime,100);\r\n\r\n//     return(\r\n//         <>\r\n//         <div style={{backgroundColor:cColor}}>\r\n//             <h1 onMouseEnter={changeBg} onMouseLeave={backToNormal}>{currentTime}</h1>\r\n//             </div>\r\n//         </>\r\n//     );\r\n\r\n// }\r\n\r\n// export default App;\r\n\r\n//=====================\r\n\r\nimport React, { useState } from \"react\";\r\n// import {ethers} from 'ethers'\r\nimport Web3 from 'web3';\r\n\r\n\r\n\r\n const App=()=>{\r\n\r\n    let conAddress=\"0x7e182c1433eABB36b7cF855cDF49ADa30EaEF7E0\";\r\n    \r\n    let abi=[\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"get\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_value\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"set\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"value\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        }\r\n    ];\r\n    // const provider = new ethers.providers.Web3Provider(web3.currentProvider);\r\n    // let provider = new ethers.providers.JsonRpcProvider()\r\n    // let provider =ethers.getDefaultProvider();\r\n    // const contract= new ethers.Contract(conAddress,abi,provider);\r\n\r\n\r\n    const web3 = new Web3(window.ethereum);\r\n    const ethObj = new web3.eth.Contract(abi, conAddress);\r\n    console.log(ethObj.methods,\"my Methods\");\r\n\r\n    const [getNumber,setGetNumber]=useState('');\r\n    const [number,setNumber]=useState(0);\r\n\r\n\r\n    let connectMetamask=()=>{\r\n        if(window.ethereum)\r\n        {\r\n            window.ethereum.request({method: 'eth_requestAccounts'});\r\n            console.log(\"Metamask Connected\");\r\n        }\r\n    }\r\n\r\n    const getBalance=async(e)=>{\r\n        e.preventDefault();\r\n\r\n        const result= await ethObj.methods.get().call();\r\n        console.log(\"Test con obj : \",result);\r\n        setGetNumber(result);\r\n        console.log(result);\r\n        console.log(\"contract\",ethObj);\r\n\r\n        \r\n    }\r\n\r\n    const setBalance=async(e)=>{\r\n        e.preventDefault();\r\n        const accounts=window.ethereum.enable();\r\n        const account=accounts[0];\r\n        const gas= await ethObj.methods.set(number).estimateGas();\r\n        \r\n        const result= await ethObj.methods.set(number).send({from: account,gas});\r\n        console.log(result);\r\n    }\r\n\r\n    return(\r\n\r\n        <>\r\n        <h1>Smart Contract Integration</h1>\r\n        <button onClick={connectMetamask}>Connect Metamask</button>\r\n\r\n        <form onSubmit={setBalance}>\r\n\r\n            <label>\r\n                Set Number : <input type=\"text\" value={number} onChange={e=>setNumber(e.target.value)}></input>\r\n\r\n            </label>\r\n            <input type=\"submit\" value=\"Set Number\"></input>\r\n            </form>\r\n        \r\n\r\n        <button onClick={getBalance} type=\"button\">Get Number</button>{getNumber}\r\n        </>\r\n\r\n    );\r\n\r\n\r\n\r\n }\r\n export default App;\r\n"]},"metadata":{},"sourceType":"module"}