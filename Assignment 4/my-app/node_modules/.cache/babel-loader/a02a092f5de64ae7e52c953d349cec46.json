{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_app\\\\my-app\\\\src\\\\App.js\";\n// import React from 'react';\n// function Card(props)\n// {\n//     return(\n//     <>\n//     <div className=\"cards\">\n//         <div className=\"card\">\n//             <img className=\"card_image\" src={props.imgSrc} alt=\"MyPic\"/>\n//             <div className=\"card_info\">\n//                 <span className=\"card_category\"></span>\n//                 <h3 className=\"class_title\"></h3>\n//                 <a href={props.link}>\n//                     <button>Watch Now</button>\n//                 </a>\n//             </div>\n//         </div>\n//     </div>\n//     </>\n//     );\n// }\n// export default Card;\n//=======================================\n// import React from \"react\";\n// const {ethers}=require('ethers');\n// let contract;\n// const App=()=>{\n//     const ethereum =window.ethereum;\n//     let abi=[\n//         {\n//             \"inputs\": [],\n//             \"name\": \"balance\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [],\n//             \"name\": \"getBalance\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"_balance\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"setBalance\",\n//             \"outputs\": [],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         }\n//     ];\n//     let conAddress=\"0xd6dfe26Ef82b4343AFE0343367CF3c5d50aFdadb\";\n//   //contract=new ethereum.eth.Contract(abi,conAddress);\n//     const login=async()=>{\n//         if(ethereum){\n//             ethereum.request({ method: 'eth_requestAccounts' });\n//            // console.log(ethereum.request({ method: 'eth_getBalance' }));\n//            // console.log()\n//             }\n//         else{\n//             console.log(\"Install Metamask\");\n//         }\n//         contract = new ethers.Contract(conAddress,abi);\n//         const setData= await contract.setBalance(10);\n//         const getData= await contract.getBalance();\n//         console.log(getData.toString());\n//     }\n//     return(\n//         <>\n//         <h1 className=\"mainHeading\">Ethereum Dapp</h1>\n//         <span>Login to Metamask to connect to Rinkeby<br></br></span>\n//         <button className=\"loginBtn\" onClick={login}>Login</button><br></br>\n//         <input type=\"text\"></input>\n//         <button className=\"transferBtn\">Transfer</button>\n//         <button className=\"transferBtn\">GetBalance</button>\n//         </>\n//     );\n// }\n// export default App;\n//==========================================================\n//==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>\n// import React,{useState} from 'react'\n// import {ethers} from 'ethers'\n// const App=()=>{\n//     const [balance,balanceUpdate]=useState(null);\n//     const [LoginButtonTxt,setLoginButtonText]=useState('MetaMask Login');\n//     const [defaultAddress,setDefaultAddress]=useState(null);\n//     const AppHandler=()=>{\n//         if(window.ethereum&&window.ethereum.isMetaMask){\n//             console.log(\"Metamask running\");\n//             window.ethereum.request({method: 'eth_requestAccounts'})\n//             .then(result=>{\n//                     addressSet(result[0]);\n//                     setLoginButtonText('MetaMask Connected');\n//             })\n//         }\n//     }\n//     const addressSet=(newAccount)=>\n//     {\n//         setDefaultAddress(newAccount);\n//     }\n//     const getBalance=(newAddress)=>{\n//         window.ethereum.request({method: 'eth_getBalance', params: [newAddress,'latest']})\n//         .then(balance=>{\n//                 balanceUpdate(ethers.utils.formatEther(balance));\n//                 console.log(\"running\");\n//         })\n//         console.log(\"getbalance button running\");\n//     }\n//     return(\n//         <>\n//         <h1>Ethereum Dapp <button onClick={AppHandler}>{LoginButtonTxt}</button></h1>\n//         <br>\n//         </br>\n//         <input type=\"text\" value=\"Enter to No of Token to transfer\"/>\n//         <br></br>\n//         <input type='text' value=\"Address of Receiver\"/><button>Transfer Token</button>\n//         <br></br>\n//         <h2>balance= {balance}</h2>\n//         <button onClick={getBalance(defaultAddress)}>GetBalance</button>\n//         </>\n//     );\n// }\n// export default App;\n//==>===========================================<=============\n//==>DIGITAL CLOCK CODE BELOW\n// import React, { useState } from 'react'\n// const App=()=>\n// {\n//     let time= new Date().toLocaleTimeString();\n//     const [currentTime,SetTime]=useState(time);\n//     const [cColor,SetColor]=useState('purple');\n//     const changeBg=()=>{\n//         let color='green';\n//         SetColor(color);\n//     }\n//     const backToNormal=()=>{\n//         let color='purple';\n//         SetColor(color);\n//     }\n//     const UpdateTime=()=>\n//     {\n//         time= new Date().toLocaleTimeString();\n//         SetTime  (time);\n//     };\n//     setInterval(UpdateTime,100);\n//     return(\n//         <>\n//         <div style={{backgroundColor:cColor}}>\n//             <h1 onMouseEnter={changeBg} onMouseLeave={backToNormal}>{currentTime}</h1>\n//             </div>\n//         </>\n//     );\n// }\n// export default App;\n//=====================\n// import React, { useState } from \"react\";\n// import {ethers} from 'ethers'\n// import Web3 from 'web3';\n//  const App=()=>{\n//     let conAddress=\"0x7e182c1433eABB36b7cF855cDF49ADa30EaEF7E0\";\n//     let abi=[\n//         {\n//             \"inputs\": [],\n//             \"name\": \"get\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"_value\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"set\",\n//             \"outputs\": [],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [],\n//             \"name\": \"value\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         }\n//     ];\n// const provider = new ethers.providers.Web3Provider(web3.currentProvider);\n// let provider = new ethers.providers.JsonRpcProvider()\n// let provider =ethers.getDefaultProvider();\n// const contract= new ethers.Contract(conAddress,abi,provider);\n//     const web3 = new Web3(window.ethereum);\n//     const ethObj = new web3.eth.Contract(abi, conAddress);\n//     console.log(ethObj.methods,\"my Methods\");\n//     const [getNumber,setGetNumber]=useState('');\n//     const [number,setNumber]=useState(0);\n//     let connectMetamask=()=>{\n//         if(window.ethereum)\n//         {\n//             window.ethereum.request({method: 'eth_requestAccounts'});\n//             console.log(\"Metamask Connected\");\n//         }\n//     }\n//     const getBalance=async(e)=>{\n//         e.preventDefault();\n//         const result= await ethObj.methods.get().call();\n//         console.log(\"Test con obj : \",result);\n//         setGetNumber(result);\n//         console.log(result);\n//         console.log(\"contract\",ethObj);\n//     }\n//     const setBalance=async(e)=>{\n//         e.preventDefault();\n//         const accounts=await window.ethereum.enable();\n//         const account=accounts[0];\n//         const gas= await ethObj.methods.set(number).estimateGas();\n//         const result= await ethObj.methods.set(number).send({from: account,gas})\n//         //setNumber(result);\n//         console.log(result);\n//     }\n//     return(\n//         <>\n//         <h1>Smart Contract Integration</h1>\n//         <button onClick={connectMetamask}>Connect Metamask</button>\n//         <form onSubmit={setBalance}>\n//             <label>\n//                 Set Number : <input type=\"text\" value={number} onChange={e=>setNumber(e.target.value)}></input>\n//             </label>\n//             <input type=\"submit\" value=\"Set Number\"></input>\n//             </form>\n//         <button onClick={getBalance} type=\"button\">Get Number</button>{getNumber}\n//         </>\n//     );\n//  }\n//  export default App;\n//==============erc20 smart contrat with front end;\n//  import React,{ useState} from 'react'\n//  import Web3 from 'web3'\n//  const App=()=>{\n//     const [userAccount,setUserAccount]=useState(\"\");\n//     const [amount,setAmount]=useState(0);\n//     const [metamaskStatus,setMetamaskStatus]=useState(\"Connect Metamask\");\n//     //below to check  total token\n//     const [balance,setBalance]=useState(0);\n//     const conAddress=\"0x83cC5ae4996909726f090E64DE5105013aF55050\";\n//     const abi=[\n//         {\n//             \"inputs\": [],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"constructor\"\n//         },\n//         {\n//             \"anonymous\": false,\n//             \"inputs\": [\n//                 {\n//                     \"indexed\": true,\n//                     \"internalType\": \"address\",\n//                     \"name\": \"owner\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"indexed\": true,\n//                     \"internalType\": \"address\",\n//                     \"name\": \"spender\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"indexed\": false,\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"value\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"Approval\",\n//             \"type\": \"event\"\n//         },\n//         {\n//             \"anonymous\": false,\n//             \"inputs\": [\n//                 {\n//                     \"indexed\": true,\n//                     \"internalType\": \"address\",\n//                     \"name\": \"previousOwner\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"indexed\": true,\n//                     \"internalType\": \"address\",\n//                     \"name\": \"newOwner\",\n//                     \"type\": \"address\"\n//                 }\n//             ],\n//             \"name\": \"OwnershipTransferred\",\n//             \"type\": \"event\"\n//         },\n//         {\n//             \"anonymous\": false,\n//             \"inputs\": [\n//                 {\n//                     \"indexed\": true,\n//                     \"internalType\": \"address\",\n//                     \"name\": \"from\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"indexed\": true,\n//                     \"internalType\": \"address\",\n//                     \"name\": \"to\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"indexed\": false,\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"value\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"Transfer\",\n//             \"type\": \"event\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"owner\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"spender\",\n//                     \"type\": \"address\"\n//                 }\n//             ],\n//             \"name\": \"allowance\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"spender\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"amount\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"approve\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"bool\",\n//                     \"name\": \"\",\n//                     \"type\": \"bool\"\n//                 }\n//             ],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"account\",\n//                     \"type\": \"address\"\n//                 }\n//             ],\n//             \"name\": \"balanceOf\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [],\n//             \"name\": \"decimals\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint8\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint8\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"spender\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"subtractedValue\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"decreaseAllowance\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"bool\",\n//                     \"name\": \"\",\n//                     \"type\": \"bool\"\n//                 }\n//             ],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"spender\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"addedValue\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"increaseAllowance\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"bool\",\n//                     \"name\": \"\",\n//                     \"type\": \"bool\"\n//                 }\n//             ],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"to\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"amount\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"mint\",\n//             \"outputs\": [],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [],\n//             \"name\": \"name\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"string\",\n//                     \"name\": \"\",\n//                     \"type\": \"string\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [],\n//             \"name\": \"owner\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"\",\n//                     \"type\": \"address\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [],\n//             \"name\": \"renounceOwnership\",\n//             \"outputs\": [],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [],\n//             \"name\": \"symbol\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"string\",\n//                     \"name\": \"\",\n//                     \"type\": \"string\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [],\n//             \"name\": \"totalSupply\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"stateMutability\": \"view\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"recipient\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"amount\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"transfer\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"bool\",\n//                     \"name\": \"\",\n//                     \"type\": \"bool\"\n//                 }\n//             ],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"sender\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"recipient\",\n//                     \"type\": \"address\"\n//                 },\n//                 {\n//                     \"internalType\": \"uint256\",\n//                     \"name\": \"amount\",\n//                     \"type\": \"uint256\"\n//                 }\n//             ],\n//             \"name\": \"transferFrom\",\n//             \"outputs\": [\n//                 {\n//                     \"internalType\": \"bool\",\n//                     \"name\": \"\",\n//                     \"type\": \"bool\"\n//                 }\n//             ],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         },\n//         {\n//             \"inputs\": [\n//                 {\n//                     \"internalType\": \"address\",\n//                     \"name\": \"newOwner\",\n//                     \"type\": \"address\"\n//                 }\n//             ],\n//             \"name\": \"transferOwnership\",\n//             \"outputs\": [],\n//             \"stateMutability\": \"nonpayable\",\n//             \"type\": \"function\"\n//         }\n//     ];\n//     const web3= new Web3(window.ethereum);\n//     const contract = new web3.eth.Contract(abi,conAddress);\n//     console.log(contract.methods);\n//     let connectMetamask=()=>{\n//                 if(window.ethereum)\n//                 {\n//                     window.ethereum.request({method: 'eth_requestAccounts'});\n//                     console.log(\"Metamask Connected\");\n//                     setMetamaskStatus(\"Connected\");\n//                 }\n//             }\n//     const sendToken=async()=>{\n//         // const accounts= await window.ethereum.enable();\n//         const accounts = await  window.ethereum.request({method: 'eth_accounts'});\n//         const account= accounts[0];\n//         console.log(\"acoount address\",account);\n//         const gas= await contract.methods.transfer(userAccount,amount).estimateGas();\n//         const result= await contract.methods.transfer(userAccount,amount).sendTransaction({from:account,gas,amount});\n//         console.log(result);\n//         //await contract.methods.transfer(userAccount,amount);\n//         //await transaction.wait();\n//         console.log(`${amount} has been succesfully transfer to account : ${userAccount}`);\n// }\n//     const balanceOf=async()=>{\n//         const result= await contract.methods.balanceOf(balance).call();\n//         setBalance(result);\n//     }\n//     return(\n//         <>\n//         <h1>My Token</h1>\n//         <br></br>\n//         <button onClick={connectMetamask}>{metamaskStatus}</button>\n//         <br></br>\n//         <input type=\"text\" onChange={e=>setUserAccount(e.target.value)} placeholder=\"Enter receiver address\"/>\n//         <input type=\"text\" onChange={e=>setAmount(e.target.value)} placeholder=\"Enter Amount of Token\"/>\n//         <button onClick={sendToken}>Transfer Token</button>\n//         <br></br>\n//         <input type=\"text\" onChange={e=>setBalance(e.target.value)} placeholder=\"Enter Address\"/>\n//         <button onClick={balanceOf}>Balance</button>{balance}\n//         </>\n//     );\n//  }\n//  export default App;\n//===============================================\n//lottery system app below\n// import React from \"react\";\n// import Web3 from 'web3'\n// const App=()=>{\n//     return(\n//         <h1>nabeel</h1>\n//     );\n// }\n// export default App;\nimport React from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  let selectedAccount;\n\n  let connectMetamask = () => {\n    let provider = window.ethereum;\n\n    if (provider !== \"undefined\") {\n      provider.request({\n        method: 'eth_requestAccounts'\n      }).then(accounts => {\n        selectedAccount = accounts[0];\n        console.log(`slected Account is ${selectedAccount}`);\n      }).catch(err => {\n        console.log(err);\n        return;\n      });\n      provider.on('accountsChanged', function (accounts) {\n        selectedAccount = accounts[0];\n        console.log('selected account changed to ${selectedAccount}');\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lottery System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectMetamask,\n      children: \"connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/React_app/my-app/src/App.js"],"names":["React","Web3","App","selectedAccount","connectMetamask","provider","window","ethereum","request","method","then","accounts","console","log","catch","err","on"],"mappings":";AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AAGJ;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AAIA;AACA;AAIC;AAED;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAKA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;;AAEA,MAAMC,GAAG,GAAC,MAAI;AAEd,MAAIC,eAAJ;;AAEA,MAAIC,eAAe,GAAC,MAAI;AAEtB,QAAIC,QAAQ,GAACC,MAAM,CAACC,QAApB;;AAEE,QAAGF,QAAQ,KAAG,WAAd,EACA;AACIA,MAAAA,QAAQ,CAACG,OAAT,CAAiB;AAACC,QAAAA,MAAM,EAAG;AAAV,OAAjB,EACWC,IADX,CACiBC,QAAD,IAAY;AAChBR,QAAAA,eAAe,GAACQ,QAAQ,CAAC,CAAD,CAAxB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBV,eAAgB,EAAlD;AAED,OALX,EAMWW,KANX,CAMkBC,GAAD,IAAS;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACA;AACD,OATX;AAWUV,MAAAA,QAAQ,CAACW,EAAT,CAAY,iBAAZ,EAA+B,UAASL,QAAT,EAAkB;AAC7CR,QAAAA,eAAe,GAACQ,QAAQ,CAAC,CAAD,CAAxB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AAEH,OAJD;AAQb;AACF,GA1BH;;AA4BI,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAET,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAOH,CAvCD;;KAAMF,G;AAiDN,eAAeA,GAAf","sourcesContent":["// import React from 'react';\r\n\r\n// function Card(props)\r\n// {\r\n//     return(\r\n//     <>\r\n//     <div className=\"cards\">\r\n//         <div className=\"card\">\r\n//             <img className=\"card_image\" src={props.imgSrc} alt=\"MyPic\"/>\r\n//             <div className=\"card_info\">\r\n//                 <span className=\"card_category\"></span>\r\n//                 <h3 className=\"class_title\"></h3>\r\n//                 <a href={props.link}>\r\n//                     <button>Watch Now</button>\r\n//                 </a>\r\n//             </div>\r\n//         </div>\r\n\r\n//     </div>\r\n//     </>\r\n//     );\r\n// }\r\n\r\n// export default Card;\r\n//=======================================\r\n// import React from \"react\";\r\n// const {ethers}=require('ethers');\r\n\r\n// let contract;\r\n// const App=()=>{\r\n//     const ethereum =window.ethereum;\r\n    \r\n    \r\n   \r\n//     let abi=[\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"balance\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"getBalance\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"_balance\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"setBalance\",\r\n//             \"outputs\": [],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         }\r\n//     ];\r\n//     let conAddress=\"0xd6dfe26Ef82b4343AFE0343367CF3c5d50aFdadb\";\r\n\r\n//   //contract=new ethereum.eth.Contract(abi,conAddress);\r\n    \r\n\r\n//     const login=async()=>{\r\n    \r\n//         if(ethereum){\r\n//             ethereum.request({ method: 'eth_requestAccounts' });\r\n//            // console.log(ethereum.request({ method: 'eth_getBalance' }));\r\n//            // console.log()\r\n//             }\r\n//         else{\r\n//             console.log(\"Install Metamask\");\r\n//         }\r\n//         contract = new ethers.Contract(conAddress,abi);\r\n//         const setData= await contract.setBalance(10);\r\n//         const getData= await contract.getBalance();\r\n//         console.log(getData.toString());\r\n    \r\n//     }\r\n\r\n       \r\n        \r\n\r\n\r\n//     return(\r\n//         <>\r\n//         <h1 className=\"mainHeading\">Ethereum Dapp</h1>\r\n//         <span>Login to Metamask to connect to Rinkeby<br></br></span>\r\n//         <button className=\"loginBtn\" onClick={login}>Login</button><br></br>\r\n//         <input type=\"text\"></input>\r\n//         <button className=\"transferBtn\">Transfer</button>\r\n//         <button className=\"transferBtn\">GetBalance</button>\r\n//         </>\r\n//     );\r\n// }\r\n// export default App;\r\n\r\n//==========================================================\r\n//==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>IMPORTANT==>\r\n// import React,{useState} from 'react'\r\n// import {ethers} from 'ethers'\r\n\r\n\r\n\r\n\r\n// const App=()=>{\r\n\r\n//     const [balance,balanceUpdate]=useState(null);\r\n//     const [LoginButtonTxt,setLoginButtonText]=useState('MetaMask Login');\r\n//     const [defaultAddress,setDefaultAddress]=useState(null);\r\n    \r\n\r\n//     const AppHandler=()=>{\r\n        \r\n//         if(window.ethereum&&window.ethereum.isMetaMask){\r\n//             console.log(\"Metamask running\");\r\n//             window.ethereum.request({method: 'eth_requestAccounts'})\r\n//             .then(result=>{\r\n//                     addressSet(result[0]);\r\n//                     setLoginButtonText('MetaMask Connected');\r\n                    \r\n//             })\r\n//         }\r\n//     }\r\n\r\n//     const addressSet=(newAccount)=>\r\n//     {\r\n//         setDefaultAddress(newAccount);\r\n//     }\r\n\r\n//     const getBalance=(newAddress)=>{\r\n//         window.ethereum.request({method: 'eth_getBalance', params: [newAddress,'latest']})\r\n//         .then(balance=>{\r\n//                 balanceUpdate(ethers.utils.formatEther(balance));\r\n//                 console.log(\"running\");\r\n//         })\r\n//         console.log(\"getbalance button running\");\r\n//     }\r\n\r\n//     return(\r\n//         <>\r\n\r\n//         <h1>Ethereum Dapp <button onClick={AppHandler}>{LoginButtonTxt}</button></h1>\r\n\r\n//         <br>\r\n//         </br>\r\n//         <input type=\"text\" value=\"Enter to No of Token to transfer\"/>\r\n//         <br></br>\r\n//         <input type='text' value=\"Address of Receiver\"/><button>Transfer Token</button>\r\n//         <br></br>\r\n//         <h2>balance= {balance}</h2>\r\n//         <button onClick={getBalance(defaultAddress)}>GetBalance</button>\r\n\r\n\r\n//         </>\r\n//     );\r\n// }\r\n// export default App;\r\n\r\n\r\n//==>===========================================<=============\r\n\r\n//==>DIGITAL CLOCK CODE BELOW\r\n// import React, { useState } from 'react'\r\n\r\n// const App=()=>\r\n// {\r\n//     let time= new Date().toLocaleTimeString();\r\n//     const [currentTime,SetTime]=useState(time);\r\n\r\n//     const [cColor,SetColor]=useState('purple');\r\n\r\n//     const changeBg=()=>{\r\n//         let color='green';\r\n//         SetColor(color);\r\n//     }\r\n\r\n//     const backToNormal=()=>{\r\n//         let color='purple';\r\n//         SetColor(color);\r\n//     }\r\n\r\n//     const UpdateTime=()=>\r\n//     {\r\n\r\n//         time= new Date().toLocaleTimeString();\r\n//         SetTime  (time);\r\n//     };\r\n\r\n//     setInterval(UpdateTime,100);\r\n\r\n//     return(\r\n//         <>\r\n//         <div style={{backgroundColor:cColor}}>\r\n//             <h1 onMouseEnter={changeBg} onMouseLeave={backToNormal}>{currentTime}</h1>\r\n//             </div>\r\n//         </>\r\n//     );\r\n\r\n// }\r\n\r\n// export default App;\r\n\r\n//=====================\r\n\r\n// import React, { useState } from \"react\";\r\n// import {ethers} from 'ethers'\r\n// import Web3 from 'web3';\r\n\r\n\r\n\r\n//  const App=()=>{\r\n\r\n//     let conAddress=\"0x7e182c1433eABB36b7cF855cDF49ADa30EaEF7E0\";\r\n    \r\n//     let abi=[\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"get\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"_value\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"set\",\r\n//             \"outputs\": [],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"value\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         }\r\n//     ];\r\n    // const provider = new ethers.providers.Web3Provider(web3.currentProvider);\r\n    // let provider = new ethers.providers.JsonRpcProvider()\r\n    // let provider =ethers.getDefaultProvider();\r\n    // const contract= new ethers.Contract(conAddress,abi,provider);\r\n\r\n\r\n//     const web3 = new Web3(window.ethereum);\r\n//     const ethObj = new web3.eth.Contract(abi, conAddress);\r\n//     console.log(ethObj.methods,\"my Methods\");\r\n\r\n//     const [getNumber,setGetNumber]=useState('');\r\n//     const [number,setNumber]=useState(0);\r\n\r\n\r\n//     let connectMetamask=()=>{\r\n//         if(window.ethereum)\r\n//         {\r\n//             window.ethereum.request({method: 'eth_requestAccounts'});\r\n//             console.log(\"Metamask Connected\");\r\n//         }\r\n//     }\r\n\r\n//     const getBalance=async(e)=>{\r\n//         e.preventDefault();\r\n\r\n//         const result= await ethObj.methods.get().call();\r\n//         console.log(\"Test con obj : \",result);\r\n//         setGetNumber(result);\r\n//         console.log(result);\r\n//         console.log(\"contract\",ethObj);\r\n\r\n        \r\n//     }\r\n\r\n//     const setBalance=async(e)=>{\r\n//         e.preventDefault();\r\n//         const accounts=await window.ethereum.enable();\r\n//         const account=accounts[0];\r\n//         const gas= await ethObj.methods.set(number).estimateGas();\r\n        \r\n//         const result= await ethObj.methods.set(number).send({from: account,gas})\r\n//         //setNumber(result);\r\n//         console.log(result);\r\n//     }\r\n\r\n//     return(\r\n\r\n//         <>\r\n//         <h1>Smart Contract Integration</h1>\r\n//         <button onClick={connectMetamask}>Connect Metamask</button>\r\n\r\n//         <form onSubmit={setBalance}>\r\n\r\n//             <label>\r\n//                 Set Number : <input type=\"text\" value={number} onChange={e=>setNumber(e.target.value)}></input>\r\n\r\n//             </label>\r\n//             <input type=\"submit\" value=\"Set Number\"></input>\r\n//             </form>\r\n        \r\n\r\n//         <button onClick={getBalance} type=\"button\">Get Number</button>{getNumber}\r\n//         </>\r\n\r\n//     );\r\n\r\n\r\n\r\n//  }\r\n//  export default App;\r\n\r\n\r\n\r\n //==============erc20 smart contrat with front end;\r\n\r\n//  import React,{ useState} from 'react'\r\n//  import Web3 from 'web3'\r\n\r\n\r\n \r\n \r\n\r\n//  const App=()=>{\r\n\r\n//     const [userAccount,setUserAccount]=useState(\"\");\r\n//     const [amount,setAmount]=useState(0);\r\n//     const [metamaskStatus,setMetamaskStatus]=useState(\"Connect Metamask\");\r\n//     //below to check  total token\r\n//     const [balance,setBalance]=useState(0);\r\n\r\n//     const conAddress=\"0x83cC5ae4996909726f090E64DE5105013aF55050\";\r\n//     const abi=[\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"constructor\"\r\n//         },\r\n//         {\r\n//             \"anonymous\": false,\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"indexed\": true,\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"owner\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"indexed\": true,\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"spender\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"indexed\": false,\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"value\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"Approval\",\r\n//             \"type\": \"event\"\r\n//         },\r\n//         {\r\n//             \"anonymous\": false,\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"indexed\": true,\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"previousOwner\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"indexed\": true,\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"newOwner\",\r\n//                     \"type\": \"address\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"OwnershipTransferred\",\r\n//             \"type\": \"event\"\r\n//         },\r\n//         {\r\n//             \"anonymous\": false,\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"indexed\": true,\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"from\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"indexed\": true,\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"to\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"indexed\": false,\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"value\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"Transfer\",\r\n//             \"type\": \"event\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"owner\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"spender\",\r\n//                     \"type\": \"address\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"allowance\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"spender\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"amount\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"approve\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"bool\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"bool\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"account\",\r\n//                     \"type\": \"address\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"balanceOf\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"decimals\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint8\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint8\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"spender\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"subtractedValue\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"decreaseAllowance\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"bool\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"bool\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"spender\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"addedValue\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"increaseAllowance\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"bool\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"bool\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"to\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"amount\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"mint\",\r\n//             \"outputs\": [],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"name\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"string\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"string\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"owner\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"address\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"renounceOwnership\",\r\n//             \"outputs\": [],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"symbol\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"string\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"string\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [],\r\n//             \"name\": \"totalSupply\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"view\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"recipient\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"amount\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"transfer\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"bool\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"bool\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"sender\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"recipient\",\r\n//                     \"type\": \"address\"\r\n//                 },\r\n//                 {\r\n//                     \"internalType\": \"uint256\",\r\n//                     \"name\": \"amount\",\r\n//                     \"type\": \"uint256\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"transferFrom\",\r\n//             \"outputs\": [\r\n//                 {\r\n//                     \"internalType\": \"bool\",\r\n//                     \"name\": \"\",\r\n//                     \"type\": \"bool\"\r\n//                 }\r\n//             ],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         },\r\n//         {\r\n//             \"inputs\": [\r\n//                 {\r\n//                     \"internalType\": \"address\",\r\n//                     \"name\": \"newOwner\",\r\n//                     \"type\": \"address\"\r\n//                 }\r\n//             ],\r\n//             \"name\": \"transferOwnership\",\r\n//             \"outputs\": [],\r\n//             \"stateMutability\": \"nonpayable\",\r\n//             \"type\": \"function\"\r\n//         }\r\n//     ];\r\n//     const web3= new Web3(window.ethereum);\r\n    \r\n\r\n//     const contract = new web3.eth.Contract(abi,conAddress);\r\n//     console.log(contract.methods);\r\n\r\n//     let connectMetamask=()=>{\r\n//                 if(window.ethereum)\r\n//                 {\r\n//                     window.ethereum.request({method: 'eth_requestAccounts'});\r\n//                     console.log(\"Metamask Connected\");\r\n//                     setMetamaskStatus(\"Connected\");\r\n                    \r\n//                 }\r\n                \r\n//             }\r\n\r\n//     const sendToken=async()=>{\r\n        \r\n        \r\n//         // const accounts= await window.ethereum.enable();\r\n//         const accounts = await  window.ethereum.request({method: 'eth_accounts'});\r\n//         const account= accounts[0];\r\n//         console.log(\"acoount address\",account);\r\n//         const gas= await contract.methods.transfer(userAccount,amount).estimateGas();\r\n//         const result= await contract.methods.transfer(userAccount,amount).sendTransaction({from:account,gas,amount});\r\n\r\n//         console.log(result);\r\n//         //await contract.methods.transfer(userAccount,amount);\r\n//         //await transaction.wait();\r\n\r\n//         console.log(`${amount} has been succesfully transfer to account : ${userAccount}`);\r\n        \r\n    \r\n\r\n// }\r\n//     const balanceOf=async()=>{\r\n//         const result= await contract.methods.balanceOf(balance).call();\r\n//         setBalance(result);\r\n\r\n//     }\r\n\r\n//     return(\r\n\r\n//         <>\r\n//         <h1>My Token</h1>\r\n//         <br></br>\r\n//         <button onClick={connectMetamask}>{metamaskStatus}</button>\r\n//         <br></br>\r\n//         <input type=\"text\" onChange={e=>setUserAccount(e.target.value)} placeholder=\"Enter receiver address\"/>\r\n//         <input type=\"text\" onChange={e=>setAmount(e.target.value)} placeholder=\"Enter Amount of Token\"/>\r\n//         <button onClick={sendToken}>Transfer Token</button>\r\n//         <br></br>\r\n//         <input type=\"text\" onChange={e=>setBalance(e.target.value)} placeholder=\"Enter Address\"/>\r\n//         <button onClick={balanceOf}>Balance</button>{balance}\r\n\r\n\r\n//         </>\r\n//     );\r\n\r\n//  }\r\n\r\n//  export default App;\r\n\r\n//===============================================\r\n//lottery system app below\r\n\r\n// import React from \"react\";\r\n// import Web3 from 'web3'\r\n\r\n\r\n// const App=()=>{\r\n\r\n//     return(\r\n//         <h1>nabeel</h1>\r\n//     );\r\n\r\n\r\n\r\n\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\nimport React from 'react'\r\nimport Web3 from 'web3';\r\n\r\nconst App=()=>{\r\n\r\nlet selectedAccount;\r\n\r\nlet connectMetamask=()=>{\r\n\r\n  let provider=window.ethereum;\r\n\r\n    if(provider!==\"undefined\")\r\n    {\r\n        provider.request({method : 'eth_requestAccounts'})\r\n                  .then((accounts)=>{\r\n                    selectedAccount=accounts[0];\r\n                    console.log(`slected Account is ${selectedAccount}`);\r\n\r\n                  })\r\n                  .catch((err) => {\r\n                    console.log(err);\r\n                    return;\r\n                  });\r\n\r\n                  provider.on('accountsChanged', function(accounts){\r\n                      selectedAccount=accounts[0];\r\n                      console.log('selected account changed to ${selectedAccount}');\r\n                      \r\n                  })\r\n\r\n                \r\n\r\n    }\r\n  }\r\n\r\n    return(\r\n      <>\r\n      <h1>Lottery System</h1>\r\n      <button onClick={connectMetamask}>connect</button>\r\n      \r\n      </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}